
                    -- ESTRUTURA DO MEU BANCO DE DADOS MERCADO



  -- COMANDOS


    CREATE DATABASE pedidos;                                          

    USE pedidos;                                                           

CREATE TABLE produtos(                                                 
    id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                        	
    nome VARCHAR(255) NOT NULL, 
    descricao VARCHAR(255),                                           
    quantidade INT NOT NULL,                                              
    preco DECIMAL(9,2) NOT NULL,                                            
    ativo BOOLEAN NOT NULL DEFAULT TRUE                        
);


CREATE TABLE clientes(
    id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    nome VARCHAR(255) NOT NULL,
    cpf VARCHAR(14) NOT NULL,
    email VARCHAR(100),
    data_de_cadastro DATETIME  
);


CREATE TABLE pedidos(
    id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    id_cliente INT NOT NULL,             
    id_produto INT NOT NULL,            
    data_pedido DATETIME,                
    status BOOLEAN NOT NULL DEFAULT TRUE, 
    FOREIGN KEY (id_cliente) REFERENCES clientes(id),
    FOREIGN KEY (id_produto) REFERENCES produtos(id)
);


CREATE TABLE itens_pedidos(
	
    id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    id_pedido INT NOT NULL,             
    id_produto INT NOT NULL, 
    quantidade INT NOT NULL,
    preco_unitario DECIMAL(9,2) NOT NULL
);

CREATE TABLE suporte_tecnico(
    	
    id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    id_cliente INT NOT NULL,
    descricao_problema VARCHAR(255),
    data_abertura DATETIME,
    status VARCHAR(50)
);

CREATE TABLE avaliacoes(
    id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    id_cliente INT NOT NULL,
    id_produto INT NOT NULL,
    nota DECIMAL(9,2) NOT NULL,
    comentarios VARCHAR(255)
);  

INSERT INTO clientes VALUES
(1, 'João Silva','1999991111','joao@gmail.com','2024-01-15'),
(2, 'Maria Souza','21988882222','maria@gmail.com','2024-02-10'),
(3, 'Carlos Pereira','31977773333','carlos@gmail.com', '2024-03-05'),
(4, 'Ana Lima','41966664444','ana@gmail.com','2024-04-20'),
(5, 'Fernanda Rocha','51955555555','fernanda@gmail.com', '2024-05-18');


INSERT INTO produtos VALUES
(1, 'Notebook Lenovo', 'Notebook com 16GB RAM, SSD 512GB', 3500.00, 10),
(2, 'Mouse Logitech', 'Mouse sem fio USB', 120.00, 50),
(3, 'Teclado Mecânico', 'Teclado com RGB e switches azuis', 250.00, 30),
(4, 'Monitor 24"', 'Monitor Full HD 24 polegadas', 800.00, 20),
(5, 'Headset Gamer', 'Headset com microfone e cancelamento de ruído', 300.00, 15);


INSERT INTO pedidos VALUES
(1, 1, '2024-06-01', 'Enviado'),
(2, 2, '2024-06-03', 'Entregue'),
(3, 3, '2024-06-05', 'Processando');


INSERT INTO itens_pedido VALUES
(1, 1, 1, 1, 3500.00),
(2, 1, 2, 2, 120.00),
(3, 2, 3, 1, 250.00),
(4, 2, 4, 1, 800.00),
(5, 3, 5, 1, 300.00),
(6, 3, 2, 1, 120.00);


INSERT INTO suporte_tecnico VALUES
(1, 1, 'Notebook travando ao iniciar.', '2024-07-01', 'Aberto'),
(2, 4, 'Problemas com áudio no headset.', '2024-07-02', 'Em andamento');


INSERT INTO avaliacoes VALUES
(1, 2, 1, 5, 'Excelente notebook, muito rápido.'),
(2, 3, 2, 4, 'Mouse muito bom, mas poderia ser maior.'),
(3, 5, 5, 3, 'Headset bom, mas o microfone é fraco.');





































































































-- Populando a tabela produtos
INSERT INTO produtos (nome, quantidade, preco, ativo) VALUES
('Teclado Mecânico', 50, 199.99, TRUE),
('Mouse Gamer', 75, 149.90, TRUE),
('Monitor 24"', 30, 899.00, TRUE),
('Notebook i5', 20, 3500.00, TRUE),
('Impressora Multifuncional', 10, 1200.00, FALSE);

-- Populando a tabela clientes
INSERT INTO clientes (nome, cpf, telefone, ativo) VALUES
('João da Silva', '123.456.789-00', '(11) 98765-4321', TRUE),
('Maria Oliveira', '987.654.321-00', '(21) 99876-5432', TRUE),
('Carlos Souza', '111.222.333-44', NULL, TRUE),
('Ana Pereira', '555.666.777-88', '(31) 91234-5678', FALSE),
('Fernanda Lima', '444.333.222-11', '(41) 92345-6789', TRUE);

-- Populando a tabela pedidos

INSERT INTO pedidos(id_cliente)
VALUES
	(1),
	(2),
	(3),
	(4),
	(4),
	(5);

INSERT INTO pedido_items(
	id_pedido,
	id_produto,
	quantidade,
	total
)
VALUES
(1,1,1,199.99),
(1,2,1,149.90),
(1,3,1,899.00);

SELECT
    PEDIDOS.id,
    PEDIDOS.id_cliente,
    CLIENTES.nome,
    PEDIDOS.id_produto,
    PEDIDOS.quantidade,
    PEDIDOS.total
FROM PEDIDOS
 JOIN CLIENTES ON PEDIDOS.id_cliente = clientes.id;
 JOIN PRODUTOS ON PEDIDOS.id_produto = PRODUTOS.id;


CREATE TABLE pedidos(
   id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
   id_cliente INT NOT NULL,
   FOREIGN KEY (id_cliente) REFERENCES clientes(id)
);

CREATE TABLE pedido_items(
   id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
   id_pedido INT NOT NULL,
   id_produto INT NOT NULL,
   quantidade INT NOT NULL,
   total DECIMAL(9,2) NOT NULL,
   FOREIGN KEY (id_pedido) REFERENCES pedidos(id),
   FOREIGN KEY (id_produto) REFERENCES produtos(id)
);
   
SELECT
  p.*, 
  c.nome,
  c.telefone 
FROM pedidos as p  
	JOIN clientes as c ON c.id = p.id_cliente 
WHERE c.telefone IS NOT NULL; 
------------------------------------------
ou deste geito.
------------------------------------------
SELECT p.*, c.nome, c.telefone FROM pedidos as p JOIN clientes as c ON c.id = p.id_cliente WHERE c.telefone IS NOT NULL;
-----------------------------------
DESC PEDIDOS_ITEMS;
-----------------------------------
SELECT
  p.*, 
  c.clientes,
  pi.*
FROM pedido as p  
	JOIN clientes as c ON c.id  = p.id_cliente;

 -----------------------------------------------------------------
SELECT
  p.*, 
  c.nome,
   
FROM pedidos as p 
	JOIN pedido_items as pi ON pi.id_pedido = p.id
WHERE c.telefone IS NOT NULL;
--------------------------------------------------------------------
SELECT
  p.*, 
  c.nome,
  c.quantidade
FROM pedidos as p 
	JOIN produtos as prod on prod.id = pi.id_produtos;

-------------------------------------------------------------------
SELECT
    *
FROM
    PEDIDOS
    JOIN CLIENTES ON CLIENTES.ID = PEDIDOS.ID_CLIENTES
 	AND CLIENTES.ATIVO = true
	AND CLIENTES.TELEFONE IS NT NULL
 JOIN PEDIDO_ITEM ON pedido.id_pedido = pedido.id_produto
 JOIN PRODUTOS ON PEDIDOS.id_produto = PRODUTOS.id;

--------------------------------------------------------------------

